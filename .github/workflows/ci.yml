name: ci
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ '**' ]
env:
  CI_XCODE_11: '/Applications/Xcode_11.7.app/Contents/Developer'
  CI_XCODE_14: '/Applications/Xcode_14.2.app/Contents/Developer'

jobs:
  ios:
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v2
    - name: Setup Ruby
      uses: ruby/setup-ruby@359bebbc29cbe6c87da6bc9ea3bc930432750108
    - name: Cache Gems
      id: cache-gems
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-
    - name: Submodules and Bundle Install
      run: |
        git submodule update --init --recursive
        sudo gem install bundler
        bundle config set path 'vendor/bundle'
        bundle install
    - name: Build-Test
      run: set -o pipefail && env NSUnbufferedIO=YES bundle exec rake test:ios
      env:
        DEVELOPER_DIR: ${{ env.CI_XCODE_14 }}
    - name: Upload Test Logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: test-logs
        path: |
          ~/Library/Logs/DiagnosticReports
          ~/Library/Developer/Xcode/DerivedData/Parse-*/Logs/Test
          ~/Library/Logs/scan
    - name: Send codecov
      run: bash <(curl https://codecov.io/bash)

  macos:
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v2
    - name: Setup Ruby
      uses: ruby/setup-ruby@359bebbc29cbe6c87da6bc9ea3bc930432750108
    - name: Cache Gems
      id: cache-gems
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-
    - name: Submodules and Bundle Install
      run: |
        git submodule update --init --recursive
        sudo gem install bundler
        bundle config set path 'vendor/bundle'
        bundle install
    - name: Create and set the default keychain
      run: |
        security create-keychain -p "" temporary
        security default-keychain -s temporary
        security unlock-keychain -p "" temporary
        security set-keychain-settings -lut 7200 temporary
    - name: Build-Test
      run: set -o pipefail && env NSUnbufferedIO=YES bundle exec rake test:macos
      env:
        DEVELOPER_DIR: ${{ env.CI_XCODE_14 }}
    - name: Send codecov
      run: bash <(curl https://codecov.io/bash)

  facebook_utils:
    runs-on: macos-12
    env:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup Ruby
      uses: ruby/setup-ruby@359bebbc29cbe6c87da6bc9ea3bc930432750108
    - name: Cache Gems
      id: cache-gems
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-
    - name: Cache Carthage
      uses: actions/cache@v2
      id: carthage-cache
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
        restore-keys: |
              ${{ runner.os }}-carthage-
    - name: Submodules and Bundle Install          
      run: |
        git submodule update --init --recursive
        sudo gem install bundler
        bundle config set path 'vendor/bundle'
        bundle install
    - name: Carthage
      if: steps.carthage-cache.outputs.cache-hit != 'true'
      run: |
        carthage bootstrap --use-xcframeworks
    - name: Build-Test
      run: set -o pipefail && env NSUnbufferedIO=YES bundle exec rake test:facebook_utils:ios
      env:
        DEVELOPER_DIR: ${{ env.CI_XCODE_14 }}
    - name: Send codecov
      run: bash <(curl https://codecov.io/bash)

  twitter_utils:
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v2
    - name: Setup Ruby
      uses: ruby/setup-ruby@359bebbc29cbe6c87da6bc9ea3bc930432750108
    - name: Cache Gems
      id: cache-gems
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-
    - name: Submodules and Bundle Install
      run: |
        git submodule update --init --recursive
        sudo gem install bundler
        bundle config set path 'vendor/bundle'
        bundle install
    - name: Build-Test
      run: set -o pipefail && env NSUnbufferedIO=YES bundle exec rake test:twitter_utils:ios
      env:
        DEVELOPER_DIR: ${{ env.CI_XCODE_14 }}
    - name: Send codecov
      run: bash <(curl https://codecov.io/bash)

  parseui:
    runs-on: macos-12
    env:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup Ruby
      uses: ruby/setup-ruby@359bebbc29cbe6c87da6bc9ea3bc930432750108
    - name: Cache Gems
      id: cache-gems
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-
    - name: Cache Carthage
      uses: actions/cache@v2
      id: carthage-cache
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
        restore-keys: |
              ${{ runner.os }}-carthage-
    - name: Submodules and Bundle Install
      run: |
        git submodule update --init --recursive
        sudo gem install bundler
        bundle config set path 'vendor/bundle'
        bundle install
    - name: Carthage
        if: steps.carthage-cache.outputs.cache-hit != 'true'
        run: |
          carthage bootstrap --use-xcframeworks
    - name: Build-Test
      env:
        DEVELOPER_DIR: ${{ env.CI_XCODE_14 }}
      run: set -o pipefail && env NSUnbufferedIO=YES bundle exec rake test:parseui:all
    - name: Send codecov
      run: bash <(curl https://codecov.io/bash)

  assets:
    runs-on: macos-11
    env:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@359bebbc29cbe6c87da6bc9ea3bc930432750108
      - name: Cache Gems
        id: cache-gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: Cache Carthage
        uses: actions/cache@v2
        id: carthage-cache
        with:
          path: Carthage
          key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
          restore-keys: |
                ${{ runner.os }}-carthage-
      - name: Submodules and Bundle Install
        run: |
          git submodule update --init --recursive
          sudo gem install bundler
          bundle config set path 'vendor/bundle'
          bundle install
      - name: Carthage
        if: steps.carthage-cache.outputs.cache-hit != 'true'
        run: |
          carthage bootstrap --use-xcframeworks
      - name: Build Release
        run: set -o pipefail && env NSUnbufferedIO=YES bundle exec rake package:release
        env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_11 }}

  docs:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@359bebbc29cbe6c87da6bc9ea3bc930432750108
      - name: Cache Gems
        id: cache-gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: Submodules and Bundle Instal
        run: |
          git submodule update --init --recursive
          sudo gem install bundler
          bundle config path vendor/bundle
          bundle install
      - name: Create Jazzy Docs
        run: |
          ./Scripts/jazzy.sh
        env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_14 }}
